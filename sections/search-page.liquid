<div id="overlay" style="justify-content: center; align-items: center;">
  <img
    id="imgOverlay"
    alt=""
    src="https://cdn.shopify.com/s/files/1/0841/2666/2935/files/snipperL_480x480.gif?v=1709009816"
    width="40%"
    height="40%"
  >
  <div id="spaceOverlay"></div>
</div>

<style>
          .main {
              display: flex;
              flex-direction: row;
              justify-content: center;
              align-items: center;
          }
          .textDiv {
              display: flex;
              flex-direction: column;
              justify-content: center;
              align-items: center;
              padding: 25px;
          }
          .text {
              text-align: center;
          }
      .responsive-imageCar {
          width: 100%;
          height: 130px;
          object-fit: contain;
      }
      .responsive-imageCar {
          width: 100%;
          height: 130px;
          object-fit: contain;
      }
  
      .label-product_new {
          color: #fff;
          font-weight: 400;
          text-align: center;
          line-height: 22px;
          padding: 0 9px;
          position: absolute;
          background: #83b71c;
          min-width: 46px;
          left: 22px;
          top: 4px;
          text-transform: uppercase;
          font-size: 12px;
          z-index: 3;
          border-radius: 5px;
          -webkit-border-radius: 5px;
          transform: skewX(-20deg);
          -webkit-transform: skewX(-20deg);
          -moz-transform: skewX(-20deg);
          -o-transform: skewX(-20deg);
          -ms-transform: skewX(-20deg);
      }

      .label-product.label_new {
          right: 22px;
          left: auto;
      }

      .list-style .label-product.label_new {
          right: 0px;
          left: auto;
      }

      /* Estilos CSS para la barra lateral */
      .sidebar {
          width: 20%;
          /* Ancho de la barra lateral */
          float: left;
          /* Flotar a la izquierda */
          background-color: #f2f2f2;
          /* Color de fondo */
          padding: 20px;
          /* Espaciado interno */
          box-sizing: border-box;
          /* Incluir padding en el ancho */
      }
      /* Estilos adicionales */
      .clearfix::after {
          content: "";
          clear: both;
          display: table;
      }

      .divMarca {
          padding-top: 5px;
          padding-bottom: 10px;
      }

      .spanMarca {
          display: inline !important;
          font-weight: 100 !important;
          font-size: 12px !important;
          padding-left: 8px;
          padding-bottom: 2px;
          cursor: pointer;
      }

      .spanMarca:hover {
          color: #FCE200;
          font-weight: bold !important;
      }

      .accent-yellow {
          accent-color: #FCE200;
      }

      .filter-attribute-container {
          display: block;
          margin-bottom: 14px;
          font-size: 16px;
          color: #3e444a;
          font-weight: 700;
          text-transform: uppercase;
          position: relative;
          font-family: Lato, sans-serif;
      }

      input[type="checkbox"] {
          /* Ocultar el checkbox predeterminado */
          appearance: none;
          -webkit-appearance: none;
          -moz-appearance: none;
          /* Tamaño del checkbox */
          width: 12px;
          height: 12px;
          /* Fondo transparente */
          background-color: transparent;
          /* Borde cuadrado y negro */
          border: 1px solid #000;
          border-radius: 0;
          /* Posición relativa para posicionar el pseudo-elemento ::before */
          position: relative;
          cursor: pointer;
      }

      /* Estilos para el pseudo-elemento ::before, que simula el checkbox */
      input[type="checkbox"]::before {
          /* Contenido vacío */
          content: "";
          /* Tamaño del pseudo-elemento */
          width: 8px;
          height: 8px;
          /* Posición absoluta para colocarlo dentro del área del checkbox */
          position: absolute;
          /* Centro del checkbox */
          top: 50%;
          left: 50%;
          transform: translate(-50%, -50%);
          /* Color del pseudo-elemento (representa el marcado del checkbox) */
          background-color: #FCE200;
          /* Inicialmente oculto */
          display: none;
      }

      /* Estilos para el checkbox cuando está marcado */
      input[type="checkbox"]:checked::before {
          /* Mostrar el pseudo-elemento (marcado del checkbox) */
          display: block;
      }

      input[type="checkbox"]:hover {
          background-color: #FCE200;
      }
      .btnFilterSMAC {
        border: 1px solid #ededed;
        border-radius: 20px;
        padding: 4px 9px 4px 9px;
        background: #ECECEC;
      }
      .btnFilterSMAC:hover {
        background: #F6F6F6;
      }
    .highlighted {
      border: 1px solid rgba(0, 0, 0, 0.3) !important;
      box-shadow: 0px 5px 23px rgba(0, 0, 0, 0.3) !important;
  }
</style>
<div class="container clearfix" id="apiContent" style="display:none;">
  <div class="breadJApi" id="breadApi"></div>
  <div class="row">
    <div class="buscador-alert" style="margin-bottom: 25px; display: none;">
      <!-- Inicia mensaje de ayuda en buscador -->
      <svg
        xmlns="http://www.w3.org/2000/svg"
        width="45"
        height="45"
        viewBox="0 0 512 512"
        style="margin-left: 15px"
      >
        <path
          fill="#292929"
          d="M426.24 30c-13.635.02-38.617 9.837-47.707 20H68.24c-32 0-32 64 0 64h310.301c9.088 10.16 34.067 19.978 47.7 20c17.123-.025 32.937-13.17 41.5-28h-39.5l-22-24l22-24h39.519c-8.565-14.835-24.39-27.982-41.52-28m-342 36c8.837 0 16 7.163 16 16s-7.163 16-16 16s-16-7.163-16-16s7.164-16 16-16m75.77 117c-8 0-13.83 4.038-20.166 8.813c-6.336 4.774-12.98 10.944-20.041 17.67c-13.752 13.096-29.103 28.29-43.608 38.218l45.407 1.135c11.17-20.948 18.277-40.386 38.408-47.836h71v50.572l18 .45V201h23c11.5 0 30.948 10.484 50.377 26.027c10.483 8.387 21.064 18.01 31.117 27.608l49.611 1.24l49.729-58.018l-13.668-11.714l-59.237 69.109c-13.952-13.825-29.952-29.196-46.306-42.28C313.06 196.517 292.51 183 272.01 183zM47.986 265.004c-4.995.008-11.034 2.78-15.613 7.36C27.787 276.948 25.01 283 25.01 288c0 13 7.276 32.26 16.633 47.23c4.355 6.97 9.123 13.056 13.38 17.313c-.001-.182-.013-.36-.013-.543c0-31.374 25.626-57 57-57s57 25.626 57 57c0 2.37-.163 4.704-.447 7h190.894a57 57 0 0 1-.447-7c0-31.374 25.626-57 57-57s57 25.626 57 57c0 2.37-.163 4.704-.447 7h9.392l5.035-45.326c-.106-12.823-6.276-21.985-14.603-28.647c-8.4-6.72-19.377-10.027-24.377-10.027h-.114zM112.01 313c-21.646 0-39 17.354-39 39s17.354 39 39 39c21.645 0 39-17.354 39-39s-17.355-39-39-39m304 0c-21.646 0-39 17.354-39 39s17.354 39 39 39c21.645 0 39-17.354 39-39s-17.355-39-39-39m-215 64v14h110v-14zm48 32v46h14v-46zm-35.438 64l-7 14h98.875l-7-14z"
        />
      </svg>
      <p style="margin: 15px">
        <b>¿No encuentras compatibilidad para tu auto?</b> Nuestros expertos están listos para ayudarte. Contáctanos y
        te brindaremos la asistencia que necesitas.
      </p>
      <div style="display: block; padding: 0" class="btn">
        <a
          class="btn"
          style="margin: 15px"
          href="https://api.whatsapp.com/send/?phone=3312664747&text=%C2%A1Hola+%2C+buen+dia%21+Me+interesa+una+cotizaci%C3%B3n&type=phone_number&app_absent=0"
          >Contáctanos</a
        >
      </div>
    </div>
    <!-- Termina mensaje de ayuda en buscador -->
    <div class="sidebar-overlay"></div>
    <div class="oc-menu" id="sidebar-toggle">
      <input type="hidden" id="menu-effect-{{section.id}}" class="menu-effect" value="none">
      <div class="oc-menu-bar visible-sm visible-xs">
        <div class="left">
          <div>
            <button class="btn button" style="padding: 0 20px;">
              <i class="fas fa-sliders" style="padding-right: 5px;"></i>
              <span>Ver categorías, encuentra aquí tu refacción.</span>
            </button>
          </div>
        </div>
      </div>
    </div>
    <aside id="column-left" class="col-md-3">
      <div class="col-order-inner">
        <div class="layernavigation-module">
          <div class="panel panel-default">
            <div class="layered">
              <div class="filter-attribute-container">
                <div style="display:flex;justify-content: space-between;">
                  <label id="b1" style="cursor:pointer;">Categorías</label>
                  <i id="toggleButton1" style="cursor: pointer;" class="fa-solid fa-chevron-down"></i>
                </div>
                <div id="toggleElement1" style="display: none;" class="list-group-item">
                  <div id="checkboxContainerCategorias"></div>
                </div>
              </div>
              <div class="filter-attribute-container" id="containerFilterMarcas">
                <div style="display:flex;justify-content: space-between;">
                  <label id="b2" style="cursor:pointer;">Marcas</label>
                  <i id="toggleButton2" style="cursor: pointer;" class="fa-solid fa-chevron-down"></i>
                </div>
                <div id="toggleElement2" style="display: none;" class="list-group-item">
                  <div id="checkboxContainerMarcas"></div>
                </div>
              </div>
              <div class="filter-attribute-container" id="containerFilterAuto">
                <div style="display:flex;justify-content: space-between;">
                  <label id="b3" style="cursor:pointer;">Auto</label>
                  <i id="toggleButton3" style="cursor: pointer;" class="fa-solid fa-chevron-down"></i>
                </div>
                <div id="toggleElement3" style="display: none;" class="list-group-item">
                  <div id="checkboxContainerAutos"></div>
                </div>
              </div>
              <div class="filter-attribute-container" id="containerFilterCalidad">
                <div style="display:flex;justify-content: space-between;">
                  <label id="b4" style="cursor:pointer;">Calidad</label>
                  <i id="toggleButton4" style="cursor: pointer;" class="fa-solid fa-chevron-down"></i>
                </div>
                <div id="toggleElement4" style="display: none;" class="list-group-item">
                  <div id="checkboxContainerCalidad"></div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </aside>
    <div id="content" class="col-md-9 col-sm-12 col-xs-12">
      <div class="search-header">
        <div class="divInfoCar" id="infoCar"></div>
        <h4
          id="titulo-productos"
          style="border: 1px solid #ededed; background-color: #f6f6f6; padding: 10px; margin-bottom: 18px;"
        >
          Productos compatibles con <b>{{ search.terms }}</b>
        </h4>
        <div id="divRenderFilters" style="display: flex; gap: 8px; margin-bottom: 17px;">
          <div
            id="divRenderFiltersSubCategorias"
            style="
              display: none; border: 1px solid rgba(0, 0, 0, 0.3) !important;
              box-shadow: 2px 2px 7px rgba(0, 0, 0, 0.2) !important;
            "
          ></div>
          <div
            id="divRenderFiltersMarcas"
            style="
              display: none; border: 1px solid rgba(0, 0, 0, 0.3) !important;
              box-shadow: 2px 2px 7px rgba(0, 0, 0, 0.2) !important;
            "
          ></div>
          <div
            id="divRenderFiltersAutos"
            style="
              display: none; border: 1px solid rgba(0, 0, 0, 0.3) !important;
              box-shadow: 2px 2px 7px rgba(0, 0, 0, 0.2) !important;
            "
          ></div>
          <div
            id="divRenderFiltersCalidad"
            style="
              display: none; border: 1px solid rgba(0, 0, 0, 0.3) !important;
              box-shadow: 2px 2px 7px rgba(0, 0, 0, 0.2) !important;
            "
          ></div>
        </div>
        <h4
          id="categoria-productos"
          style="border: 1px solid #ededed; background-color: #f6f6f6; padding: 10px; margin-bottom: 18px; display:none"
        >
          <b>Selecciona una categoría para mostrar los resultados.</b>
          <a
            href="javascript:void(0)"
            id="ver-categorias"
            style="display: none; margin-left: auto; white-space: nowrap; text-align: end;"
            ><i
              class="fa-solid fa-eye"
              style="padding-right: 8px;"
            ></i
            ><b>Ver categorías</b></a
          >
        </h4>
        <h4
          id="alert-quimicos"
          style="border: 1px solid #F1F122; background-color: #fff898; padding: 10px; margin-bottom: 18px; display:none"
        >
          <div style="display:flex; flex-direction: row; align-items: center;">
            <i class="fa-solid fa-triangle-exclamation" style="padding-right: 12px; font-size: xx-large;"></i>
            <div>
              Los productos de esta categoría <b>no incluyen garantía</b>. Se recomienda
              <b>consultar el manual de usuario del vehículo</b> para verificar su compatibilidad.
            </div>
          </div>
        </h4>
        <div id="notFound" style="display: none">No hubo coincidencias con los filtros seleccionados.</div>
        <div
          id="spinnerLoad"
          style="display: none; flex-direction: column;align-items: center;margin-bottom: 50px; margin-top: 50px;"
        >
          <div>
            <img
              width="180px"
              src="https://cdn.shopify.com/s/files/1/0841/2666/2935/files/spinnerData.gif?v=1722004958"
              alt="SAFE - Cargando"
            >
          </div>
          <div style="padding-top: 10px;">
            <h4 style="text-align: center;">Cargando productos.</h4>
          </div>
        </div>
        <div
          id="notLoadProducts"
          style="display: none; justify-content: center; padding-top: 100px; padding-bottom: 100px;"
        >
          <div style="display: flex; align-items: center; padding-right: 10px;">
            <i class="fa-solid fa-triangle-exclamation" style="font-size: xx-large;"></i>
          </div>
          <div>
            <h4>No pudimos cargar los productos. Actualiza la página o intenta en unos momentos.</h4>
          </div>
        </div>
      </div>
      <div class="custom-category custom-products add-quickview">
        <div id="related-products-container" class="row"></div>
      </div>

      <div id="divPag" class="toolbar toolbar-products toolbar-bottom">
        <div id="paginationAPI" class="pages ajax_pagination"></div>
        <div class="toolbar-amount">
          <span id="spanMostrar"></span>
        </div>
      </div>
    </div>
  </div>
</div>

<div class="container clearfix" id="apiContentError" style="display:none; flex-direction:column;">
  <div class="breadJApi" id="breadApiError"></div>
  <div id="messageCarNotFound" class="row">
    <div id="messageImg" style="display:flex; flex-direction: row; align-items:center;">
      <div id="messageNotF" style="width: 50%;">
        <h1>Tu vehículo no se logró encontrar en nuestro catálogo.</h1>
        <br>
        <h2>Contacta a nuestros asesores quienes te ayudaran a encontrar la refacción adecuada para tu vehículo.</h2>
      </div>
      <div id="imgNF" style="width: 50%;">
        <img src="https://cdn.shopify.com/s/files/1/0841/2666/2935/files/error_vin.webp?v=1718376443">
      </div>
    </div>
    <div id="telNotF" style="display:flex; justify-content: center; padding-top: 30px;">
      <div id="telIcon" style="display:flex; flex-direction: row; align-items:center;">
        <a
          style="padding: 8px 20px 8px 10px;"
          href="https://api.whatsapp.com/send/?phone=3312664747&text=%C2%A1Hola+%2C+buen+dia%21+Me+interesa+una+cotizaci%C3%B3n&type=phone_number&app_absent=0"
          target="_blank"
          class="btn"
        >
          <div style="display: flex; flex-direction: row;">
            <div style="display: flex; flex-direction: row; align-items: center;">
              <i class="fa-brands fa-whatsapp btn" style="font-size: xx-large;"></i>
            </div>
            <div style="font-size: large;">Contacta a un asesor</div>
          </div>
        </a>
      </div>
    </div>
  </div>
</div>
          
<div class="container clearfix" id="apiContentErrorSKU" style="display:none; flex-direction:column;">
  <div class="breadJApi" id="breadApiErrorSKU"></div>
  <div class="search-text">
                <div class="main">
                  <div class="imgDiv">
                    {% if section.settings.image != blank %}
                      <img
                        {% if settings.lazyloading_enable %}
                          data-
                        {% endif -%}
                        src="{{ section.settings.image | img_url: 'master' }}"
                        alt=""
                        class="{% if settings.lazyloading_enable %}lazyload{% endif %} img-responsive"
                      >
                    {% endif %}
                  </div>

                  <div class="textDiv">
                    <h1 class="text">{{ 'general.search.title' | t }}</h1>
                    <h3>{{ 'general.search.no_results_html' | t: terms: search.terms }}</h3>
                    <!--
                      <h3>¿Qué tal si intentas buscarlo de la siguiente manera? - <a
                      href="https://saferefacciones.shop/search?type=product&q={{ search.terms | replace: ' ', '' }}"
                      style="color: #007bff;">{{ search.terms | replace: ' ', '' }}</a></h3>
                    -->
                    <h3>¿No está en nuestro catálogo? Envía tu <b>sugerencia de nuevo producto</b></h3>
                    <div class="opciones-no-encontrado">                      
<a class="btn" href="https://wa.me/3312664747?text=%C2%A1Hola+%2C+buen+dia%21+Me+interesa+una+cotizaci%C3%B3n"><b><i class="fa-brands fa-whatsapp fa-lg" style="margin-right: 5px;"></i> CONTÁCTA A UN ASESOR</b></a>
                     {% if section.settings.link != blank %}
                        <a href="{{ section.settings.link }}" class="btn">ENVIAR SUGERENCIA</a>
                      {% endif %}
                    </div>
                  </div>
                </div>
              </div>
</div>


{% assign grid_results = true %}
{% include 'urls-brands' %}

{% assign respond_js_secret_key = shop.domain | md5 %}
{% unless search.terms == respond_js_secret_key %}
  <div class="container" id="container" style="display: none;">
    {% render 'breadcrumb' %}
    <div class="row">
      <div class="buscador-alert" style="display: none;">
        <!-- Inicia mensaje de ayuda en buscador -->
        <svg
          xmlns="http://www.w3.org/2000/svg"
          width="45"
          height="45"
          viewBox="0 0 512 512"
          style="margin-left: 15px"
        >
          <path
            fill="#292929"
            d="M426.24 30c-13.635.02-38.617 9.837-47.707 20H68.24c-32 0-32 64 0 64h310.301c9.088 10.16 34.067 19.978 47.7 20c17.123-.025 32.937-13.17 41.5-28h-39.5l-22-24l22-24h39.519c-8.565-14.835-24.39-27.982-41.52-28m-342 36c8.837 0 16 7.163 16 16s-7.163 16-16 16s-16-7.163-16-16s7.164-16 16-16m75.77 117c-8 0-13.83 4.038-20.166 8.813c-6.336 4.774-12.98 10.944-20.041 17.67c-13.752 13.096-29.103 28.29-43.608 38.218l45.407 1.135c11.17-20.948 18.277-40.386 38.408-47.836h71v50.572l18 .45V201h23c11.5 0 30.948 10.484 50.377 26.027c10.483 8.387 21.064 18.01 31.117 27.608l49.611 1.24l49.729-58.018l-13.668-11.714l-59.237 69.109c-13.952-13.825-29.952-29.196-46.306-42.28C313.06 196.517 292.51 183 272.01 183zM47.986 265.004c-4.995.008-11.034 2.78-15.613 7.36C27.787 276.948 25.01 283 25.01 288c0 13 7.276 32.26 16.633 47.23c4.355 6.97 9.123 13.056 13.38 17.313c-.001-.182-.013-.36-.013-.543c0-31.374 25.626-57 57-57s57 25.626 57 57c0 2.37-.163 4.704-.447 7h190.894a57 57 0 0 1-.447-7c0-31.374 25.626-57 57-57s57 25.626 57 57c0 2.37-.163 4.704-.447 7h9.392l5.035-45.326c-.106-12.823-6.276-21.985-14.603-28.647c-8.4-6.72-19.377-10.027-24.377-10.027h-.114zM112.01 313c-21.646 0-39 17.354-39 39s17.354 39 39 39c21.645 0 39-17.354 39-39s-17.355-39-39-39m304 0c-21.646 0-39 17.354-39 39s17.354 39 39 39c21.645 0 39-17.354 39-39s-17.355-39-39-39m-215 64v14h110v-14zm48 32v46h14v-46zm-35.438 64l-7 14h98.875l-7-14z"
          />
        </svg>
        <p style="margin: 15px">
          <b>¿No encuentras compatibilidad para tu auto?</b> Nuestros expertos están listos para ayudarte. Contáctanos y
          te brindaremos la asistencia que necesitas.
        </p>
        <div style="display: block; padding: 0" class="btn">
          <a
            class="btn"
            href="https://api.whatsapp.com/send/?phone=3312664747&text=%C2%A1Hola+%2C+buen+dia%21+Me+interesa+una+cotizaci%C3%B3n&type=phone_number&app_absent=0"
            >Contáctanos</a
          >
        </div>
      </div>
      <!-- Termina mensaje de ayuda en buscador -->
      <div id="content" class="col-sm-12">
        {% if search.performed %}
          {% paginate search.results by 12 %}
            {% if search.results_count == 0 %}
              <div class="search-header">
                <div class="main">
                  <div class="imgDiv">
                    {% if section.settings.image != blank %}
                      <img
                        {% if settings.lazyloading_enable %}
                          data-
                        {% endif -%}
                        src="{{ section.settings.image | img_url: 'master' }}"
                        alt=""
                        class="{% if settings.lazyloading_enable %}lazyload{% endif %} img-responsive"
                      >
                    {% endif %}
                  </div>

                  <div class="textDiv">
                    <h1 class="text">{{ 'general.search.title' | t }}</h1>
                    <h3>{{ 'general.search.no_results_html' | t: terms: search.terms }}</h3>
                    <!--
                      <h3>¿Qué tal si intentas buscarlo de la siguiente manera? - <a
                      href="https://saferefacciones.shop/search?type=product&q={{ search.terms | replace: ' ', '' }}"
                      style="color: #007bff;">{{ search.terms | replace: ' ', '' }}</a></h3>
                    -->
                    <h3>¿No está en nuestro catálogo? Envía tu <b>sugerencia de nuevo producto</b></h3>
                    <div class="opciones-no-encontrado">                      
<a class="btn" href="https://wa.me/3312664747?text=%C2%A1Hola+%2C+buen+dia%21+Me+interesa+una+cotizaci%C3%B3n"><b><i class="fa-brands fa-whatsapp fa-lg" style="margin-right: 5px;"></i> CONTÁCTA A UN ASESOR</b></a>
                     {% if section.settings.link != blank %}
                        <a href="{{ section.settings.link }}" class="btn">ENVIAR SUGERENCIA</a>
                      {% endif %}
                    </div>
                  </div>
                </div>
              </div>
            {% else %}
              <div class="search-header">
                <h2>{{ 'general.search.results_for_html' | t: terms: search.terms }}</h2>
                <br>
              </div>
              {% if grid_results == false %}
                {% for item in search.results %}
                  {% include 'search-result' %}
                {% endfor %}
              {% else %}
                <div class="custom-category custom-products add-quickview">
                  <div class="row">
                    {% for item in search.results %}
                      {% assign grid_item_width = 'large--one-fifth medium--one-third small--one-half' %}
                      {% include 'search-result-grid' %}
                    {% endfor %}
                  </div>
                </div>
              {% endif %}
            {% endif %}
            {% if paginate.pages > 1 %}
              {% include 'pagination' %}
            {% endif %}
          {% endpaginate %}
        {% else %}
          {% comment %}
            If search.performed is false, someone either accessed the page without the q parameter, or it was blank.
          {% endcomment %}
          <div class="search-header">
            <h2>{{ 'general.search.title' | t }}</h2>
            <br>
          </div>
        {% endif %}
      </div>
    </div>
  </div>
{% else %}
  {% include 'respond' %}
  {% layout none %}
{% endunless %}

{% schema %}
{
  "name": "Search Page",
  "settings": [
    {
      "type": "image_picker",
      "id": "image",
      "label": "Image",
      "info": "Img Not Found"
    },
    {
      "type": "url",
      "id": "link",
      "label": "Link URL",
      "default": "/"
    }
  ],
  "blocks": [],
  "presets": []
}
{% endschema %}
<script>
      document.addEventListener("DOMContentLoaded", function() {
          const breadcrumb = document.querySelector(".breadcrumbs");
          breadcrumb.style.display = "none";
      });
      let originalProducts = null;
      let filteredProducts = null;
      let currentPage = 1;
      const itemsPerPage = 12;
      var selectedSubcategorias = [];
      var selectedMarcas = [];
      var selectedAutos = [];
      var selectedCalidad = [];
      var flagSearchModel = false;
      var searchFlagNoPart = false;
      var searchPartSKU = "";
      var firstProductReference = null;
      var highlightClass = "";
      var rawUrls = {{ urls_brands | json }};
      var brandUrls = rawUrls.map(function(item) {
        var parts = item.split('height:');
        var url = parts[0].trim();
        var height = parts[1];
        return {
          url: url,
          height: height
        };
      });
      var abortController = null;
  
      var searchTerm = "{{ search.terms }}";// search.terms
          var searchCount = "{{ search.results_count }}";
          let params = new URLSearchParams(location.search);
          var version = params.get('version');
          var marca = params.get('marca');
          var carParam = params.get('idCar');
          // Selecciona el elemento del título
          let tituloElement = document.getElementById('titulo-productos');
      const regexStringAlfaN = /^[a-zA-ZáéíóúüÁÉÍÓÚÜ\s]{4}/;
    
      // Realizar la solicitud AJAX al cargar la página
      document.addEventListener("DOMContentLoaded", function() {

          if (carParam !== null || regexStringAlfaN.test(searchTerm) === false) {
            console.log("Es no parte");
            // Actualiza el contenido del título si 'marca' está definido
          if (tituloElement && marca) {
              tituloElement.innerHTML = `Productos compatibles con <b>${marca} ${searchTerm}</b>`;
          }
  
          if (carParam !== null && carParam !== undefined && carParam !== '') {
            var encodedSearchCar = encodeURIComponent(carParam);
            var url = 'https://www.saferefacciones.com/TecDoc/API/VIN/Categorias.php?id_vehiculo=' + encodedSearchCar;//buscar por vin
          } else {
            var searchTermWithoutSpacesAndDashes = searchTerm.replace(/[\s-]/g, "");
              var encodedSearchTerm = encodeURIComponent(searchTermWithoutSpacesAndDashes);
              var url = 'https://www.saferefacciones.com/TecDoc/API/ejecutor.php?valor_usuario=' + encodedSearchTerm; //buscar por no parte 
              searchFlagNoPart = true; // para saber que se esta buscando por numero de parte
              searchPartSKU = encodedSearchTerm;
            }
              
          
          var xhr = new XMLHttpRequest();
          xhr.open('GET', url, true);
          // Establecer un tiempo de espera en milisegundos (por ejemplo, 10 segundos)
          var timeoutMillis = 10000; // 10 segundos
          // Establecer un temporizador para manejar la solicitud que tarda mucho
          var timeoutId = setTimeout(function() {
              // Cancelar la solicitud AJAX si ha tardado demasiado
              xhr.abort();
              console.error('La solicitud ha tardado demasiado.');
              // Ocultar el mensaje de carga
              document.getElementById('overlay').style.visibility = 'hidden';
              // Mostrar resultados originales
              toggleContainer();
          }, timeoutMillis);
          xhr.onload = function() {
              // Limpiar el temporizador
              clearTimeout(timeoutId);
              if (xhr.status === 200) {
                  var jsonResponse = JSON.parse(xhr.responseText);
                  console.log(jsonResponse.results);
                  console.log(jsonResponse);
  
                  if (jsonResponse.hasOwnProperty("error") && jsonResponse.error === "Archivo JSON no encontrado"){
                   var bapi = document.getElementById("breadApiError");
                      const breadcrumbHTML = `<ul class="breadcrumb">
                                        <li><a href="/" title="Regresar al inicio">Inicio</a></li>
                                        <li><a href=javascript:void(0)><span>Búsqueda: 0 resultados encontrados.</span></a></li>
                                      </ul>`;
                      bapi.innerHTML = breadcrumbHTML;
                      document.title =
                          `Búsqueda: 0 resultados encontrados SAFE REFACCIONES.`;
                    var container = document.getElementById("container");
                    container.style.display = "none";
                    var apicontent = document.getElementById("apiContent");
                    apicontent.style.display = "none";
                    var apicontentError = document.getElementById("apiContentError");
                    apicontentError.style.display = "flex";
                    var breadApi = document.getElementById("breadApi");
                    breadApi.style.display = "none";
                    var breadOriginal = document.querySelector(".breadcrumbs");
                    breadOriginal.style.display = "none";
                  } else {
                    if (jsonResponse.results_count === 0) { // No se encontraron resultados desde la respuesta de cualquier peticion
                     var bapi = document.getElementById("breadApiErrorSKU");
                      const breadcrumbHTML = `<ul class="breadcrumb">
                                        <li><a href="/" title="Regresar al inicio">Inicio</a></li>
                                        <li><a href=javascript:void(0)><span>Búsqueda: 0 resultados encontrados.</span></a></li>
                                      </ul>`;
                      bapi.innerHTML = breadcrumbHTML;
                      document.title =
                          `Búsqueda: 0 resultados encontrados SAFE REFACCIONES.`;
                    var container = document.getElementById("container");
                    container.style.display = "none";
                    var apicontent = document.getElementById("apiContent");
                    apicontent.style.display = "none";
                    var apicontentError = document.getElementById("apiContentErrorSKU");
                    apicontentError.style.display = "flex";
                    var breadApi = document.getElementById("breadApi");
                    breadApi.style.display = "none";
                    var breadOriginal = document.querySelector(".breadcrumbs");
                    breadOriginal.style.display = "none";
                  } else {
                      var bapi = document.getElementById("breadApi"); // para el cambio de los breadcrums
                      const breadcrumbHTML = `<ul class="breadcrumb">
                                        <li><a href="/" title="Regresar al inicio">Inicio</a></li>
                                        <li><a href=javascript:void(0)><span>Búsqueda: ${jsonResponse.Detalles_vehiculo ? "Resultados": jsonResponse.results_count + " resultados"}  encontrados para "${searchTerm == "" ? jsonResponse.Detalles_vehiculo.Modelo : searchTerm}"</span></a></li>
                                      </ul>`;
                      bapi.innerHTML = breadcrumbHTML;
                      document.title =
                          `Búsqueda: ${jsonResponse.Detalles_vehiculo ? "Resultados": jsonResponse.results_count + " resultados"}  encontrados para "${searchTerm == "" ? jsonResponse.Detalles_vehiculo.Modelo : searchTerm}" SAFE REFACCIONES`;
                      if (searchFlagNoPart === true) { // la parte de las flags es para la forma en que se van a ordenar los productos
                        var newArray = moveElementToFrontBySku(jsonResponse.results, searchPartSKU.toUpperCase(), jsonResponse.categorias_unicas); // Para el ordenamiento 
                        originalProducts = newArray; // una vez que se ejecuta el ordenamiento se  asigna  los productos originales para el renderizado
                        filteredProducts = originalProducts.slice() // se crea una copia para no perder el estado 
                        renderFilters(jsonResponse); // Renderiza los filtros se le pasa la respuesta de la peticion
                      } 
                      
                      if (jsonResponse.hasOwnProperty('Detalles_vehiculo')) {
                          flagSearchModel = true;
                          var containFilter = document.getElementById("containerFilterAuto");
                          containFilter.style.display = "none";
                          var containFilter2 = document.getElementById("containerFilterMarcas");
                          containFilter2.style.display = "none";
                          var containFilter3 = document.getElementById("containerFilterCalidad");
                          containFilter3.style.display = "none";
                          var divInfoCar = document.getElementById("infoCar");
                          divInfoCar.style.display = "flex";
                          var txtcat = document.getElementById("categoria-productos");
                          txtcat.style.display = "flex";
                          var elementToggle = document.getElementById("toggleElement1");
                          elementToggle.style.display = "block"
                          var buttonToggle = document.getElementById("toggleButton1");
                          buttonToggle.classList.remove('fa-chevron-down');
                          buttonToggle.classList.add('fa-chevron-up');
                          renderInfoCar(jsonResponse.Detalles_vehiculo); // renderiza la informacion del auto
                          document.getElementById("apiContent").style.display = "block";
                          renderFiltersVIN(jsonResponse); //Para renderizar los filtros que dependeran de las consultas
                      } else {
                          mostrarProductosRelacionados(); // Realiza toda la logica de mostrar todas las cards de los productos
                          document.getElementById("apiContent").style.display = "block";
                        
                      }
                  
                  }
                  
                  }
                    
                  
              } else {
                  console.error('Error al realizar la solicitud: ' + xhr.status);
              }
              // Ocultar el mensaje de carga
              document.getElementById('overlay').style.visibility = 'hidden';
          };
          xhr.send();
          } else {
            console.log("Es descripción");
            toggleContainer();
            document.getElementById('overlay').style.visibility = 'hidden';
            
          }  
      });
  
    
      //Función para mostrar la búsqueda original
      function toggleContainer() {
          var container = document.getElementById("container");
          container.style.display = "block";
          var apicontent = document.getElementById("apiContent");
          apicontent.style.display = "none";
          var breadApi = document.getElementById("breadApi");
          breadApi.style.display = "none";
          var breadOriginal = document.querySelector(".breadcrumbs");
          breadOriginal.style.display = "block";
      }
  
    
      // Función para mostrar los productos relacionados
      function mostrarProductosRelacionados(page = 1) {
          var divPag = document.getElementById("divPag");
          var contenedor = document.getElementById('related-products-container');
          const start = (page - 1) * itemsPerPage;
          const end = start + itemsPerPage;
          const productos = filteredProducts.slice(start, end);
          // Limpiar el contenedor
          contenedor.innerHTML = '';
          if (productos.length == 0) {
              document.getElementById("notFound").style.display = "flex";
              divPag.style.display = "none";
          } else {
              document.getElementById("notFound").style.display = "none";
              divPag.style.display = "inline-block";
          }
        
          // Iterar sobre los productos y crear elementos HTML para cada uno
        
          productos.forEach(function(producto, index) {
            var icon = "<div></div>";
            brandUrls.forEach(element => {
            if (producto.marca === "URO") {
              icon = `
                <div style="position: absolute; z-index: 3; right: 10px; top: 5px;">
                  <img style="height:30px;" src="https://cdn.shopify.com/s/files/1/0841/2666/2935/files/icon-URO.png?v=1726606840" />
                </div>`;
            }else {
              if (producto.marca === "LEMFÖRDER") {
                icon = `
                  <div style="position: absolute; z-index: 3; right: 10px; top: 5px;">
                    <img style="height:25px;" src="https://cdn.shopify.com/s/files/1/0841/2666/2935/files/icon-LEMFORDER.png?v=1727208348" />
                  </div>`;
              } else { 
                if (producto.marca === "NE") {
                  icon = `
                  <div style="position: absolute; z-index: 3; right: 10px; top: 5px;">
                    <img style="height:40px;" src="https://cdn.shopify.com/s/files/1/0841/2666/2935/files/icon-NPR.png?v=1727209765" />
                  </div>`;
              } else {
                  if (producto.marca == "BMW&MINI-GENUINA") {
                  icon = `<div style="position: absolute;z-index: 3;right: 10px;top: 5px;">
                    <img style="height:35px;" src="https://cdn.shopify.com/s/files/1/0841/2666/2935/files/icon-BMW_MINI-GENUINA.png?v=1729264144" />
                  </div>`;
              } else {
                  if (producto.marca == "MINI-GENUINA") {
                  icon = `<div style="position: absolute;z-index: 3;right: 10px;top: 5px;">
                    <img style="height:35px;" src="https://cdn.shopify.com/s/files/1/0841/2666/2935/files/icon-MINI-GENUINA.png?v=1729263662" />
                  </div>`;
                  } else {
                  if (producto.marca == "INA") {
                    icon = `<div style="position: absolute;z-index: 3;right: 10px;top: 5px;">
                    <img style="height:40px;" src="https://cdn.shopify.com/s/files/1/0841/2666/2935/files/icon-INA.png?v=1727208078" />
                  </div>`;
                  } 
                else {
                  if (element.url.includes(producto.marca)) {
                    icon = `
                    <div style="position: absolute; z-index: 3; right: 10px; top: 5px;">
                      <img style="height:${element.height}" src="${element.url}" />
                    </div>`;
                }
              }
              }
              }
              }
              }
            }
            
          });
    
            
              // Determinar la disponibilidad del producto
              var disponibilidad = producto.inventario < 1 ? 'por resurtir' : producto.inventario +
              ' disponibles';
              // Determinar la clase del label
              var labelClass = producto.inventario < 1 ? 'label-product label_sale l_sold' :
                  'label-product label_new';
              // Crear el elemento HTML del producto
              if (searchFlagNoPart === true) {
                highlightClass = producto.sku === firstProductReference ? 'highlighted' : '';
              }
              var productoHTML = `
        <div class="product-layout product-grid grid-style col-lg-4 col-md-4 col-sm-6 col-xs-12 product-item"}>
          <div class="product-thumb transition">
            <div class="item item1">
              <div class="item-inner ${highlightClass}">
                <div class="caption-top">
                  <h4 class="product-name">
                    <a href="${producto.url}">
                      ${producto.title} 
                    </a>
                  </h4>
                  <p class="manufacture-product">
                    <a title="SAFE">${producto.Calidad != null && producto.Calidad != "" ? `${producto.Calidad} - ${producto.sku}`  : `${producto.sku}`}</a>
                  </p>
                </div>
                <div class="image images-container">
                  <div class="inner">                  
                    <div class="image images-container">
                      <a href="${producto.url}" class="product-image">
                        <img class="img-responsive has-rotator img-default-image img-cate-9060940349719-template--21934592229655__main"
                            src="${producto.thumbnail}" alt="${producto.title}">
                        <img class="img-r" src="${producto.thumbnail}" alt="${producto.title}">
                      </a>
                      ${icon}
                    </div>                  
                    <div class="price-box" style="text-align: start; margin-left: 20px; margin-bottom: 20px;">
                      <div class="${labelClass}"><span>${disponibilidad}</span></div>
                      <p class="regular-price"><span class="price">$ ${parseFloat(producto.price).toLocaleString('es-MX', { minimumFractionDigits: 2 }) + " MXN"}</span></p>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      `;
              // Agregar el HTML del producto al contenedor
              contenedor.innerHTML += productoHTML;
          });
          renderPagination();
      }
  
      function renderInfoCar(carData) {
          var txtProdComp = document.getElementById('titulo-productos');
          txtProdComp.innerHTML = `Productos compatibles con <b>${carData.Modelo.substring(0,carData.Modelo.indexOf(")")+1) !== carData.Description ?  carData.Modelo.substring(0,carData.Modelo.indexOf(")")+1) + " " + carData.Description + carData.Modelo.substring(carData.Modelo.indexOf(")")+1,carData.Modelo.length) : carData.Modelo}</b>`
          var containerInfoCar = document.getElementById('infoCar');
          containerInfoCar.innerHTML = `
              <div style="width: 280px;">
                ${carData.Vehicle_image != "no disponible" ? `<img src='${carData.Vehicle_image}' class="responsive-imageCar">` : `<div class="responsive-imageCar"></div>`}
              </div>
              <div>
                <div>
                  <h3 style="text-align: center;">${carData.Modelo.substring(0,carData.Modelo.indexOf(")")+1) !== carData.Description ?  carData.Modelo.substring(0,carData.Modelo.indexOf(")")+1) + " " + carData.Description + carData.Modelo.substring(carData.Modelo.indexOf(")")+1,carData.Modelo.length) : carData.Modelo}</h3>
                  <div class="txtMovilData">
                    <h5 style="background: #f6f6f6; line-height: 1.5;"><b style="padding-right:8px;">Año de construcción:</b> ${carData.Beginyear} - ${carData.Endyear}</h5>
                    <h5 style="background: #f6f6f6; line-height: 1.5;"><b style="padding-right:8px;">Tipo de motor:</b> ${carData.Motor}</h5>
                  </div>
                </div>
              <div class="divDataCar">
                <div>
                  <h5 style="background: #f6f6f6; padding-left: 10px; padding-right: 30px; line-height: 1.5;"><b style="white-space: nowrap;">Año de construcción</b><br/><span style="white-space: nowrap;">${carData.Beginyear} - ${carData.Endyear}</span></h5>
                  <h5 style="padding-right: 30px; padding-left: 10px; line-height: 1.5;"><b style="white-space: nowrap;">Tipo de carrocería</b><br/> <span style="white-space: nowrap;">${carData.Modelo_carroseria}</span></h5>
                  <h5 style="background: #f6f6f6; padding-left: 10px; padding-right: 30px; line-height: 1.5;"><b style="white-space: nowrap;">Potencia</b><br/><span style="white-space: nowrap;"> ${carData.Kilowatts} kW / ${carData.HP} HP</span></h5>
                  <h5 style="padding-right: 30px; padding-left: 10px; line-height: 1.5;"><b style="white-space: nowrap;">Cilindrada</b><br/><span style="white-space: nowrap;"> ${carData.Capacidad_CC} cc / ${carData.Capacity_liters} l</span></h5>
                </div>
                <div>
                  <h5 style="background: #f6f6f6; padding-right: 30px; line-height: 1.5;"><b style="white-space: nowrap;">Cilindro</b><br/><span style="white-space: nowrap;"> ${carData.Cantidad_cilindros}</span></h5>
                  <h5 style="padding-right: 30px; line-height: 1.5;"><b style="white-space: nowrap;">Válvulas</b><br/><span style="white-space: nowrap;"> ${carData.Valvulas}</span></h5>
                  <h5 style="background: #f6f6f6; padding-right: 30px; line-height: 1.5;"><b style="white-space: nowrap;">Tipo de motor</b><br/><span style="white-space: nowrap;"> ${carData.Motor}</span></h5>
                  <h5 style="padding-right: 30px; line-height: 1.5;"><b style="white-space: nowrap;">Combustible</b><br/><span style="white-space: nowrap;"> ${carData.Combustible}</span></h5>
                </div>
                <div>
                  <h5 style="background: #f6f6f6; padding-right: 30px; line-height: 1.5;"><b style="white-space: nowrap;">Tipo de inyeccion</b><br/> ${carData.Tipo_inyeccion}</h5>
                  <h5 style="padding-right: 30px; line-height: 1.5;"><b style="white-space: nowrap;">Tipo de tracción</b><br/> ${carData.Tipo_traccion}</h5>
                  <h5 style="background: #f6f6f6; padding-right: 30px; line-height: 1.5;"><b style="white-space: nowrap;">Códigos de motor</b><br/> ${carData.Codigo_motor}</h5>
                </div>
              </div>
            </div>
            <div class="divFicha">
                    <h5 style="display: inline-block; white-space: nowrap; padding-right: 10px; margin-left: 5px;"><b>Ficha técnica</b></h5>
                    <select class="form-control" id="fichaTecnica" style="margin-right: 5px;">
                      <option selected="">Tipo de carrocería: ${carData.Modelo_carroseria}</option>
                      <option>Potencia: ${carData.Kilowatts} kW / ${carData.HP} HP</option>
                      <option>Cilindrada: ${carData.Capacidad_CC} cc / ${carData.Capacity_liters} l</option>
                      <option>Cilindro: ${carData.Cantidad_cilindros}</option>
                      <option>Válvulas: ${carData.Valvulas}</option>
                      <option>Combustible: ${carData.Combustible}</option>
                      <option>Tipo de inyeccion: ${carData.Tipo_inyeccion}</option>
                      <option>Tipo de tracción: ${carData.Tipo_traccion}</option>
                      <option>Códigos de motor: ${carData.Codigo_motor}</option>
                    </select>
                  </div>
          `;
      }
  
      function renderPagination() {
          const paginationContainer = document.getElementById("paginationAPI");
          paginationContainer.innerHTML = "";
          let txtProductos = document.getElementById('titulo-productos');
          let posicionTxtProductos = txtProductos.getBoundingClientRect().top + window.scrollY;
          const totalPages = Math.ceil(filteredProducts.length / itemsPerPage);
          const createPageLink = (page, text = null, isActive = false, isDots = false) => {
              const listItem = document.createElement("li");
              if (isDots) {
                  const dots = document.createElement("span");
                  dots.textContent = "...";
                  dots.style.color = "black"
                  listItem.appendChild(dots);
              } else {
                  const link = document.createElement("a");
                  link.href = `#`;
                  link.textContent = text || page;
                  link.title = text || page;
                  link.onclick = (event) => {
                      event.preventDefault();
                      currentPage = page;
                      mostrarProductosRelacionados(page);
                      window.scrollTo({
                          top: posicionTxtProductos,
                          behavior: 'auto'
                      });
                  };
                  if (isActive) {
                      listItem.className = "active";
                      const span = document.createElement("span");
                      span.textContent = text || page;
                      listItem.appendChild(span);
                  } else {
                      listItem.appendChild(link);
                  }
              }
              return listItem;
          };
          const ul = document.createElement("ul");
          ul.className = "pagination";
          // Botón de retroceso
          if (currentPage > 1) {
              ul.appendChild(createPageLink(currentPage - 1, "<"));
          }
          // Primera página
          ul.appendChild(createPageLink(1, "1", currentPage === 1));
          // Páginas intermedias
          if (currentPage > 4) {
              ul.appendChild(createPageLink(null, "...", false, true));
          }
          let startPage = Math.max(2, currentPage - 2);
          let endPage = Math.min(totalPages - 1, currentPage + 2);
          if (currentPage <= 4) {
              endPage = Math.min(totalPages - 1, 5);
          }
          if (currentPage >= totalPages - 3) {
              startPage = Math.max(2, totalPages - 4);
          }
          for (let i = startPage; i <= endPage; i++) {
              ul.appendChild(createPageLink(i, i, currentPage === i));
          }
          if (currentPage < totalPages - 3) {
              ul.appendChild(createPageLink(null, "...", false, true));
          }
          // Última página
          if (totalPages > 1) {
              ul.appendChild(createPageLink(totalPages, totalPages, currentPage === totalPages));
          }
          // Botón de avance
          if (currentPage < totalPages) {
              ul.appendChild(createPageLink(currentPage + 1, ">"));
          }
          paginationContainer.appendChild(ul);
          const start = (currentPage - 1) * itemsPerPage;
          const end = Math.min(start + itemsPerPage, filteredProducts.length);
          const toolbarAmount = document.getElementById("spanMostrar");
          toolbarAmount.textContent = `Mostrando ${start + 1} a ${end} de ${filteredProducts.length} productos`;
      }
  
      function renderFilters(productsJSON) {
          const products = productsJSON.results;
          const filterMarcas = productsJSON.marcas_unicas.sort();
          const filterCategorias = productsJSON.categorias_unicas.sort();
          let categoriasConSubcategorias = {};
          for (let categoria of filterCategorias) {
              categoriasConSubcategorias[categoria] = [];
          }
          for (let producto of products) {
              // Agregar la subcategoría al arreglo si aún no existe
              if (!categoriasConSubcategorias[producto.categoria].includes(producto.sub_categoria)) {
                  categoriasConSubcategorias[producto.categoria].push(producto.sub_categoria);
              }
          }
          for (let categoria in categoriasConSubcategorias) {
              categoriasConSubcategorias[categoria].sort();
          }
          const filterAutos = ["AUDI", "BMW", "CUPRA", "JAGUAR", "LANDROVER", "MERCEDES BENZ", "MINI", "PORSCHE", "SEAT",
              "SMART", "VOLVO", "VW"
          ];
          const filterCalidad = ["OEM|OE", "REFORZADA", "GENUINA"];
          renderCheckBoxes("checkboxContainerMarcas", filterMarcas, "marca");
          renderCategoriasConSubcategorias("checkboxContainerCategorias", categoriasConSubcategorias);
          renderCheckBoxes("checkboxContainerAutos", filterAutos, "auto");
          renderCheckBoxes("checkboxContainerCalidad", filterCalidad, "calidad");
      }
    
      function renderFiltersVIN(productsJSON) {
          let categoriasConSubcategorias =Object.keys(productsJSON.categorias)
    .sort((a, b) => a.localeCompare(b)) // Ordenamos las claves alfabéticamente
    .reduce((obj, key) => {
      // Ordenamos las subcategorías, si existen
      obj[key] = Array.isArray(productsJSON.categorias[key]) 
        ? productsJSON.categorias[key].sort((a, b) => a.localeCompare(b)) 
        : productsJSON.categorias[key];
      return obj;
    }, {});
          const filterAutos = ["AUDI", "BMW", "CUPRA", "JAGUAR", "LANDROVER", "MERCEDES BENZ", "MINI", "PORSCHE", "SEAT",
              "SMART", "VOLVO", "VW"
          ];
          const filterCalidad = ["OEM|OE", "REFORZADA", "GENUINA"];
          //renderCheckBoxes("checkboxContainerMarcas", filterMarcas, "marca");
          renderCategoriasConSubcategorias("checkboxContainerCategorias", categoriasConSubcategorias, productsJSON);
          //renderCheckBoxes("checkboxContainerAutos", filterAutos, "auto");
          //renderCheckBoxes("checkboxContainerCalidad", filterCalidad, "calidad");
      }
  
      function renderCheckBoxes(containerId, items, filterName) {
          var countId = 0;
          const checkboxContainer = document.getElementById(containerId);
          items.forEach((item) => {
              const checkbox = document.createElement("input");
              checkbox.type = "checkbox";
              checkbox.name = filterName;
              checkbox.value = item;
              checkbox.classList.add("accent-yellow");
              checkbox.id = item + countId;
              const label = document.createElement("label");
              label.textContent = item;
              label.classList.add("spanMarca");
              label.setAttribute("for", item + countId);
              countId++;
              const divCheck = document.createElement("div");
              divCheck.classList.add("divMarca");
              divCheck.appendChild(checkbox);
              divCheck.appendChild(label);
              checkboxContainer.appendChild(divCheck);
          });
          checkboxContainer.addEventListener("change", function(event) {
              if (event.target.type === "checkbox" && event.target.name === filterName) {
                  const checkboxes = document.querySelectorAll(`input[name="${filterName}"]`);
                  checkboxes.forEach(cb => {
                      if (cb !== event.target) {
                          cb.checked = false;
                      }
                  });
                  if (window.innerWidth <= 991) {
                          let txtProductos = document.getElementById('titulo-productos');
                          let posicionTxtProductos = txtProductos.getBoundingClientRect().top + window.scrollY;
                          window.scrollTo({
                          top: posicionTxtProductos,
                          behavior: 'auto'
                          });
                          ocultarCategorias(event);
                      }
                  filtrarProductos();
              }
          });
      }
  
      function renderCategoriasConSubcategorias(containerId, categoriasConSubcategorias, productsJSON) {
          const checkboxContainer = document.getElementById(containerId);
          var countId = 0;
          var countToogle = 5;
          for (const categoria in categoriasConSubcategorias) {
              const categoriaDiv = document.createElement('div');
              const categoriaDiv2 = document.createElement('div');
              categoriaDiv.id = 'toggleElementC' + countToogle;
              categoriaDiv.style.marginBottom = '15px';
              categoriaDiv.style.display = 'none';
              categoriaDiv.classList.add = 'list-group-item';
              categoriaDiv2.style.display = "flex";
              categoriaDiv2.style.justifyContent = "space-between";
              const categoriaLabel = document.createElement('label');
              categoriaLabel.style.fontWeight = 'bold';
              categoriaLabel.style.fontSize = '13px';
              categoriaLabel.textContent = categoria;
              categoriaLabel.id = 'bC' + countToogle;
              categoriaLabel.style.cursor = 'pointer';
              categoriaDiv2.appendChild(categoriaLabel);
              const toggleButton = document.createElement('i');
              toggleButton.id = 'toggleButtonC' + countToogle;
              toggleButton.style.cursor = 'pointer';
              toggleButton.style.fontSize = '12px';
              toggleButton.className = 'fa-solid fa-plus';
              countToogle++;
              categoriaDiv2.appendChild(toggleButton);
              const subcategorias = categoriasConSubcategorias[categoria];
              subcategorias.forEach(subcategoria => {
                  const divCheck = document.createElement('div');
                  divCheck.style.marginLeft = '10px';
                  divCheck.classList.add("divMarca");
                  const checkbox = document.createElement('input');
                  checkbox.type = 'checkbox';
                  checkbox.name = 'subcategoria';
                  checkbox.value = subcategoria;
                  checkbox.setAttribute('data-info', categoria);
                  checkbox.classList.add("accent-yellow");
                  checkbox.id = subcategoria + countId;
                  const label = document.createElement('label');
                  label.textContent = subcategoria;
                  label.style.marginLeft = '5px';
                  label.style.fontSize = '12px';
                  label.classList.add("spanMarca");
                  label.setAttribute("for", subcategoria + countId);
                  divCheck.appendChild(checkbox);
                  divCheck.appendChild(label);
                  categoriaDiv.appendChild(divCheck);
                  countId++;
                  checkbox.addEventListener('change', function() {
                      const checkboxes = document.querySelectorAll('input[name="subcategoria"]');
                      checkboxes.forEach(cb => {
                          if (cb !== checkbox) {
                              cb.checked = false;
                          }
                      });
                      if (window.innerWidth <= 991) {
                          let txtProductos = document.getElementById('titulo-productos');
                          let posicionTxtProductos = txtProductos.getBoundingClientRect().top + window.scrollY;
                          window.scrollTo({
                          top: posicionTxtProductos,
                          behavior: 'auto'
                          });
                          ocultarCategorias(event);
                      }
                      if (flagSearchModel) {
                        if (checkbox.checked) {
                        var selectedSub = obtenerFiltrosSeleccionadosCat('subcategoria');
                        consultaSubCategoriaFetch(selectedSub[0], selectedSub[1], productsJSON);
                        } else {
                          filteredProducts = [];
                          filtrarProductos();
                        }
                        
                      } else {
                        filtrarProductos();
                      } 
                  });
              });
              checkboxContainer.appendChild(categoriaDiv2);
              checkboxContainer.appendChild(categoriaDiv);
          }
      }
  
      async function consultaSubCategoriaFetch(categoria, subcategoria, productsJSON) {
      if (abortController) {
          abortController.abort();
      }
  
      abortController = new AbortController();
      const signal = abortController.signal;
  
      const contenedor = document.getElementById('related-products-container');
      contenedor.innerHTML = "";
      const paginationContainer = document.getElementById("paginationAPI");
      paginationContainer.innerHTML = "";
      const txtpaginationContainer = document.getElementById("spanMostrar");
      txtpaginationContainer.innerHTML = "";
      const subContainer = document.getElementById("divRenderFilters");
      subContainer.style.display = "none";
      const txtCatContainer = document.getElementById("categoria-productos");
      txtCatContainer.style.display = "none";
      const notFound = document.getElementById("notFound");
      notFound.style.display = "none";
      const quimicos = document.getElementById("alert-quimicos");
      quimicos.style.display = "none";
      var spinnerLoad = document.getElementById("spinnerLoad");
      spinnerLoad.style.display = "flex";
      var errorServer = document.getElementById("notLoadProducts");
      errorServer.style.display = "none";
  
      var requestBody = {
          "Id_vehiculo": `${carParam}`,
          "categoria": `${categoria}`,
          "subcategoria": `${subcategoria}`,
          "Marca": `${productsJSON.Detalles_vehiculo.Marca}`
      };

        //console.log(requestBody)
        
      try {
          // Realizamos la solicitud con la señal de aborto
          const responseSub = await fetch(
              "https://www.saferefacciones.com/TecDoc/API/VIN/Vehicle.php",
              {
                  headers: {
                      'Content-Type': 'application/json'
                  },
                  method: "POST",
                  body: JSON.stringify(requestBody),
                  signal: signal  // Pasamos la señal de abortar
              }
          );
  
          if (!responseSub.ok) {
              throw new Error("Error en la solicitud");
          } else {
              spinnerLoad.style.display = "none";
              subContainer.style.display = "flex";
              txtCatContainer.style.display = "flex";
  
              var responseSubJson = await responseSub.json();
              //console.log(responseSubJson);
              originalProducts = responseSubJson.results.sort((a, b) => b.inventario - a.inventario);
              filteredProducts = originalProducts.slice();
              filtrarProductos();
  
              if (responseSubJson.results_count === 0) {
                  notFound.style.display = "flex";
              }
          }
          } catch (error) {
              if (error.name === 'AbortError') {
                  console.log("La petición fue cancelada.");
              } else {
                  console.error("Error:", error);
                  spinnerLoad.style.display = "none";
                  errorServer.style.display = "flex";
              }
          }
      }
  
      function filtrarProductos() {
          selectedSubcategorias = obtenerFiltrosSeleccionadosCat('subcategoria');
          var divFilters = document.getElementById("divRenderFilters");
          var divFSubCategorias = document.getElementById("divRenderFiltersSubCategorias");
          var divFMarcas = document.getElementById("divRenderFiltersMarcas");
          var divFAutos = document.getElementById("divRenderFiltersAutos");
          var divFCalidad = document.getElementById("divRenderFiltersCalidad");
          var catText = selectedSubcategorias.slice(0,2).join(' - ');
          var textCategoria = document.getElementById("categoria-productos");
          selectedMarcas = obtenerFiltrosSeleccionados("marca");
          selectedAutos = obtenerFiltrosSeleccionados("auto");
          selectedCalidad = obtenerFiltrosSeleccionados("calidad");
  
          actualizarFiltro(divFSubCategorias, selectedSubcategorias, desmarcarUnCheckboxSub, 1, 'closeFilterSubcategorias');
          actualizarFiltro(divFMarcas, selectedMarcas, desmarcarUnCheckboxMarcas, 0, 'closeFilterMarcas');
          actualizarFiltro(divFAutos, selectedAutos, desmarcarUnCheckboxAutos, 0, 'closeFilterAutos');
          actualizarFiltro(divFCalidad, selectedCalidad, desmarcarUnCheckboxCalidad, 0, 'closeFilterCalidad');
        
          if (catText != "") {
              textCategoria.innerHTML = `<b>${catText}</b> <a href="javascript:void(0)" id="ver-categorias" style="display: none; margin-left: auto; white-space: nowrap; text-align: end;"><i class="fa-solid fa-eye" style="padding-right: 8px;"></i><b>Ver filtros</b>`;
              document.getElementById('ver-categorias').addEventListener('click', mostrarCategorias);
              document.getElementById('ver-categorias').addEventListener('touchstart', mostrarCategorias);
          } else {
              textCategoria.innerHTML = `<b>Selecciona una categoría en los filtros para mostrar los resultados.</b> <a href="javascript:void(0)" id="ver-categorias" style="display: none; margin-left: auto; white-space: nowrap; text-align: end;"><i class="fa-solid fa-eye" style="padding-right: 8px;"></i><b>Ver filtros</b></a>`
              document.getElementById('ver-categorias').addEventListener('click', mostrarCategorias);
              document.getElementById('ver-categorias').addEventListener('touchstart', mostrarCategorias);
          }
          if (selectedSubcategorias.includes("Anticongelantes lubricantes químicos")){
            document.getElementById("alert-quimicos").style.display = "block";
          } else {
            document.getElementById("alert-quimicos").style.display = "none";
          }
          const filteredArray = originalProducts.filter((product) => {
              const subcategoriaMatch = selectedSubcategorias.length === 0 || selectedSubcategorias.includes(
                  product.categoria) && selectedSubcategorias.includes(product.sub_categoria);
              const marcaMatch = selectedMarcas.length === 0 || selectedMarcas.includes(product.marca);
              const autoMatch = selectedAutos.length === 0 || selectedAutos.some(auto => product.tags.includes(
                  "auto_" + auto));
              const calidadMatch = selectedCalidad.length === 0 || selectedCalidad.some(calidad => product.tags
                  .includes("calidad_" + calidad));
              return subcategoriaMatch && marcaMatch && autoMatch && calidadMatch;
          });
          if (flagSearchModel){
            currentPage = 1;
            mostrarProductosRelacionados(currentPage);
            document.getElementById("notFound").style.display = "none";
          } else {
            filteredProducts = filteredArray;
            currentPage = 1;
            mostrarProductosRelacionados(currentPage);
          }
          
      }
  
      function actualizarFiltro(divFiltro, selectedItems, cerrarFiltroCallback, posicion, filtroId) {
        if (selectedItems.length > 0) {
            divFiltro.innerHTML = `<a href="javascript:void(0)" id="${filtroId}" style="display:inline; margin-left: auto;">
                                    <i class="fa-solid fa-x" style="padding-right:5px; font-size: smaller"></i>
                                    <b>${selectedItems[posicion]}</b></a>`;
            divFiltro.classList.add("btnFilterSMAC");
            divFiltro.style.display = "inline";
            const closeFilterElement = document.getElementById(filtroId);
            closeFilterElement.addEventListener('click', () => cerrarFiltroCallback(selectedItems));
            closeFilterElement.addEventListener('touchstart', () => cerrarFiltroCallback(selectedItems));
        } else {
            divFiltro.style.display = "none";
        }
    }
  
      function obtenerFiltrosSeleccionados(tipo) {
          const checkboxes = document.querySelectorAll(`input[name="${tipo}"]:checked`);
          return Array.from(checkboxes).flatMap(checkbox => [
            checkbox.value,
            checkbox.id
          ]);
      }
  
      function obtenerFiltrosSeleccionadosCat(tipo) {
          const checkboxes = document.querySelectorAll(`input[name="${tipo}"]:checked`);
          return Array.from(checkboxes).flatMap(checkbox => [
              checkbox.getAttribute('data-info'),
              checkbox.value,
              checkbox.id
          ]);
      }
  
      function mostrarCategorias(event) {
          event.preventDefault();
          document.getElementById('column-left').style.display = 'block';
          document.getElementById('column-left').classList.add('sidebar-toggle');
          document.querySelector(".sidebar-overlay").style.display = 'block';
      }
      function ocultarCategorias(event) {
          event.preventDefault();
          document.getElementById('column-left').style.display = 'none';
          document.querySelector(".sidebar-overlay").style.display = 'none';
      }
      // Asignar la función al evento onclick del enlace
      document.getElementById('ver-categorias').addEventListener('click', mostrarCategorias);
      document.getElementById('ver-categorias').addEventListener('touchstart', mostrarCategorias);
  
      function toggleVisibility(index) {
          const element = document.getElementById('toggleElement' + index);
          const button = document.getElementById('toggleButton' + index);
          if (element.style.display === 'none' || element.style.display === '') {
              element.style.display = 'block';
              button.classList.remove('fa-chevron-down');
              button.classList.add('fa-chevron-up');
          } else {
              element.style.display = 'none';
              button.classList.remove('fa-chevron-up');
              button.classList.add('fa-chevron-down');
          }
      }
  
      function toggleVisibilityC(index) {
          const element = document.getElementById('toggleElementC' + index);
          const button = document.getElementById('toggleButtonC' + index);
          if (element.style.display === 'none' || element.style.display === '') {
              element.style.display = 'block';
              button.classList.remove('fa-plus');
              button.classList.add('fa-minus');
          } else {
              element.style.display = 'none';
              button.classList.remove('fa-minus');
              button.classList.add('fa-plus');
          }
      }
  
      function addToggleListeners(index) {
          const toggleButton = document.getElementById(`toggleButton${index}`);
          const button = document.getElementById(`b${index}`);
          if (toggleButton) {
              toggleButton.addEventListener('click', function() {
                  toggleVisibility(index);
              });
          }
          if (button) {
              button.addEventListener('click', function() {
                  toggleVisibility(index);
              });
          }
      }
  
      function addToggleListenersC(index) {
          const toggleButton = document.getElementById(`toggleButtonC${index}`);
          const button = document.getElementById(`bC${index}`);
          if (toggleButton) {
              toggleButton.addEventListener('click', function() {
                  toggleVisibilityC(index);
              });
          }
          if (button) {
              button.addEventListener('click', function() {
                  toggleVisibilityC(index);
              });
          }
      }
      // Función para observar cambios en el DOM
      function observeDOMChanges() {
          const observer = new MutationObserver((mutations) => {
              mutations.forEach((mutation) => {
                  mutation.addedNodes.forEach((node) => {
                      if (node.nodeType === 1) { // Elemento tipo nodo
                          const toggleButton = node.querySelector('[id^=toggleButtonC]');
                          const button = node.querySelector('[id^=bC]');
                          if (toggleButton && button) {
                              const index = toggleButton.id.match(/\d+/)[0];
                              addToggleListenersC(index);
                          }
                      }
                  });
              });
          });
          observer.observe(document.body, {
              childList: true,
              subtree: true
          });
      }
      // Evento para el DOM completamente cargado
      document.addEventListener('DOMContentLoaded', () => {
          // Agregar event listeners a los elementos iniciales
          for (let i = 1; i <= 4; i++) {
              addToggleListeners(i);
          }
          // Observar cambios en el DOM para elementos dinámicos
          observeDOMChanges();
      });
  
      function desmarcarUnCheckboxSub(arrayChecks) {
          var filSub = document.getElementById("divRenderFiltersSubCategorias");
          var checkbox = document.getElementById(arrayChecks[2]);
          selectedSubcategorias = [];
          checkbox.checked = false;
          filSub.classList.remove("btnFilterSMAC");
          filSub.style.display = "none";
          document.getElementById("closeFilterSubcategorias").style.display = "none";
          renderAllFilter();
      }
      function desmarcarUnCheckboxMarcas(arrayChecks) {
          var filMarcas = document.getElementById("divRenderFiltersMarcas");
          var checkbox = document.getElementById(arrayChecks[1]);
          selectedMarcas = [];
          checkbox.checked = false;
          filMarcas.classList.remove("btnFilterSMAC");
          filMarcas.style.display = "none";
          document.getElementById("closeFilterMarcas").style.display = "none";
          renderAllFilter();
      }
      function desmarcarUnCheckboxAutos(arrayChecks) {
          var filAuto = document.getElementById("divRenderFiltersAutos");
          var checkbox = document.getElementById(arrayChecks[1]);
          selectedAutos = [];
          checkbox.checked = false;
          filAuto.classList.remove("btnFilterSMAC");
          filAuto.style.display = "none";
          document.getElementById("closeFilterAutos").style.display = "none";
          renderAllFilter();
      }
      function desmarcarUnCheckboxCalidad(arrayChecks) {
          var filCalidad = document.getElementById("divRenderFiltersCalidad");
          var checkbox = document.getElementById(arrayChecks[1]);
          selectedCalidad = [];
          checkbox.checked = false;
          filCalidad.classList.remove("btnFilterSMAC");
          filCalidad.style.display = "none";
          document.getElementById("closeFilterCalidad").style.display = "none";
          renderAllFilter();
      }
      function renderAllFilter() {
        if (flagSearchModel) {
          filteredProducts = [];
          filtrarProductos();
        } else {
          filtrarProductos();
        }
      }
    function moveElementToFrontBySku(arr, sku, categorias) {
      var arrayIncludeSku = [];
      var arrayNotIncludeSku = [];
      var catArray = []; 
      var catArray2 = []; 
      var saveFirst = []; 
      var skuAlterno = null;
      //console.log(sku);
      //console.log("array a contemplar", arr);
      const index = arr.findIndex(item => item.sku.includes(sku));
      //console.log("este es el indice Normal", index);
      const indexAlterno = arr.findIndex(item => {
        skuAlterno = item.Matched
        //console.log(skuAlterno);
        return item.hasOwnProperty('Matched') && item.Matched !== null && item.Matched !== '';
      });
      //console.log("este es el indice Alterno", indexAlterno);
      
      // Si el objeto no se encuentra, devolver el array original
      if (index === -1 && indexAlterno === -1) {
          arr.sort((a, b) => b.inventario - a.inventario);
          return arr;
      } else {

        if ( index >=0 ) {
          if (categorias.length > 1) {
          arr.forEach(element => {
            
          if (element.sku.includes(sku)){
              arrayIncludeSku.push(element);
          } else {
              arrayNotIncludeSku.push(element);
          }
           
      });
        catArray = arrayIncludeSku.sort((a, b) => b.inventario - a.inventario).concat(arrayNotIncludeSku.sort((a, b) => b.inventario - a.inventario));
        firstProductReference = catArray[0].sku;
        return catArray;
        } else {
          arr.forEach(element => {
      if (element.sku.includes(sku)){
              arrayIncludeSku.push(element);
          } else {
              arrayNotIncludeSku.push(element);
          }
        });
          catArray2 = arrayIncludeSku.sort((a, b) => b.inventario - a.inventario).concat(arrayNotIncludeSku.sort((a, b) => b.inventario - a.inventario));
          firstProductReference = catArray2[0].sku;
          saveFirst = catArray2.shift();
          catArray = catArray2.sort((a, b) => b.inventario - a.inventario);
          catArray.unshift(saveFirst);
        return catArray;
        }
        }

        if ( indexAlterno >= 0 ) {
          if (categorias.length > 1) {
          arr.forEach(element => {
            
          if (element.sku.includes(skuAlterno)){
              arrayIncludeSku.push(element);
          } else {
              arrayNotIncludeSku.push(element);
          }
           
      });
        catArray = arrayIncludeSku.sort((a, b) => b.inventario - a.inventario).concat(arrayNotIncludeSku.sort((a, b) => b.inventario - a.inventario));
        firstProductReference = catArray[0].sku;
        return catArray;
        } else {
          arr.forEach(element => {
      if (element.sku.includes(skuAlterno)){
              arrayIncludeSku.push(element);
          } else {
              arrayNotIncludeSku.push(element);
          }
        });
          catArray2 = arrayIncludeSku.sort((a, b) => b.inventario - a.inventario).concat(arrayNotIncludeSku.sort((a, b) => b.inventario - a.inventario));
          firstProductReference = catArray2[0].sku;
          saveFirst = catArray2.shift();
          catArray = catArray2.sort((a, b) => b.inventario - a.inventario);
          catArray.unshift(saveFirst);
        return catArray;
        }
        } 
      }
  }
</script>
